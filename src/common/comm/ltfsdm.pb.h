// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ltfsdm.proto

#ifndef PROTOBUF_ltfsdm_2eproto__INCLUDED
#define PROTOBUF_ltfsdm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace LTFSDmD {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ltfsdm_2eproto();
void protobuf_AssignDesc_ltfsdm_2eproto();
void protobuf_ShutdownFile_ltfsdm_2eproto();

class Command;
class LTFSDmMigRequest;
class LTFSDmMigRequestResp;
class LTFSDmMigRequest_FileName;
class LTFSDmSelRecRequest;
class LTFSDmSelRecRequest_FileName;
class LTFSDmTransRecRequest;

enum LTFSDmMigRequest_State {
  LTFSDmMigRequest_State_PREMIGRATED = 0,
  LTFSDmMigRequest_State_MIGRATED = 1
};
bool LTFSDmMigRequest_State_IsValid(int value);
const LTFSDmMigRequest_State LTFSDmMigRequest_State_State_MIN = LTFSDmMigRequest_State_PREMIGRATED;
const LTFSDmMigRequest_State LTFSDmMigRequest_State_State_MAX = LTFSDmMigRequest_State_MIGRATED;
const int LTFSDmMigRequest_State_State_ARRAYSIZE = LTFSDmMigRequest_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* LTFSDmMigRequest_State_descriptor();
inline const ::std::string& LTFSDmMigRequest_State_Name(LTFSDmMigRequest_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    LTFSDmMigRequest_State_descriptor(), value);
}
inline bool LTFSDmMigRequest_State_Parse(
    const ::std::string& name, LTFSDmMigRequest_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LTFSDmMigRequest_State>(
    LTFSDmMigRequest_State_descriptor(), name, value);
}
enum LTFSDmSelRecRequest_State {
  LTFSDmSelRecRequest_State_PREMIGRATED = 0,
  LTFSDmSelRecRequest_State_MIGRATED = 1
};
bool LTFSDmSelRecRequest_State_IsValid(int value);
const LTFSDmSelRecRequest_State LTFSDmSelRecRequest_State_State_MIN = LTFSDmSelRecRequest_State_PREMIGRATED;
const LTFSDmSelRecRequest_State LTFSDmSelRecRequest_State_State_MAX = LTFSDmSelRecRequest_State_MIGRATED;
const int LTFSDmSelRecRequest_State_State_ARRAYSIZE = LTFSDmSelRecRequest_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* LTFSDmSelRecRequest_State_descriptor();
inline const ::std::string& LTFSDmSelRecRequest_State_Name(LTFSDmSelRecRequest_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    LTFSDmSelRecRequest_State_descriptor(), value);
}
inline bool LTFSDmSelRecRequest_State_Parse(
    const ::std::string& name, LTFSDmSelRecRequest_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LTFSDmSelRecRequest_State>(
    LTFSDmSelRecRequest_State_descriptor(), name, value);
}
enum LTFSDmTransRecRequest_State {
  LTFSDmTransRecRequest_State_PREMIGRATED = 0,
  LTFSDmTransRecRequest_State_MIGRATED = 1
};
bool LTFSDmTransRecRequest_State_IsValid(int value);
const LTFSDmTransRecRequest_State LTFSDmTransRecRequest_State_State_MIN = LTFSDmTransRecRequest_State_PREMIGRATED;
const LTFSDmTransRecRequest_State LTFSDmTransRecRequest_State_State_MAX = LTFSDmTransRecRequest_State_MIGRATED;
const int LTFSDmTransRecRequest_State_State_ARRAYSIZE = LTFSDmTransRecRequest_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* LTFSDmTransRecRequest_State_descriptor();
inline const ::std::string& LTFSDmTransRecRequest_State_Name(LTFSDmTransRecRequest_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    LTFSDmTransRecRequest_State_descriptor(), value);
}
inline bool LTFSDmTransRecRequest_State_Parse(
    const ::std::string& name, LTFSDmTransRecRequest_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LTFSDmTransRecRequest_State>(
    LTFSDmTransRecRequest_State_descriptor(), name, value);
}
// ===================================================================

class LTFSDmMigRequest_FileName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTFSDmD.LTFSDmMigRequest.FileName) */ {
 public:
  LTFSDmMigRequest_FileName();
  virtual ~LTFSDmMigRequest_FileName();

  LTFSDmMigRequest_FileName(const LTFSDmMigRequest_FileName& from);

  inline LTFSDmMigRequest_FileName& operator=(const LTFSDmMigRequest_FileName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTFSDmMigRequest_FileName& default_instance();

  void Swap(LTFSDmMigRequest_FileName* other);

  // implements Message ----------------------------------------------

  inline LTFSDmMigRequest_FileName* New() const { return New(NULL); }

  LTFSDmMigRequest_FileName* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTFSDmMigRequest_FileName& from);
  void MergeFrom(const LTFSDmMigRequest_FileName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LTFSDmMigRequest_FileName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string filename = 1;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:LTFSDmD.LTFSDmMigRequest.FileName)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  friend void  protobuf_AddDesc_ltfsdm_2eproto();
  friend void protobuf_AssignDesc_ltfsdm_2eproto();
  friend void protobuf_ShutdownFile_ltfsdm_2eproto();

  void InitAsDefaultInstance();
  static LTFSDmMigRequest_FileName* default_instance_;
};
// -------------------------------------------------------------------

class LTFSDmMigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTFSDmD.LTFSDmMigRequest) */ {
 public:
  LTFSDmMigRequest();
  virtual ~LTFSDmMigRequest();

  LTFSDmMigRequest(const LTFSDmMigRequest& from);

  inline LTFSDmMigRequest& operator=(const LTFSDmMigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTFSDmMigRequest& default_instance();

  void Swap(LTFSDmMigRequest* other);

  // implements Message ----------------------------------------------

  inline LTFSDmMigRequest* New() const { return New(NULL); }

  LTFSDmMigRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTFSDmMigRequest& from);
  void MergeFrom(const LTFSDmMigRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LTFSDmMigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LTFSDmMigRequest_FileName FileName;

  typedef LTFSDmMigRequest_State State;
  static const State PREMIGRATED =
    LTFSDmMigRequest_State_PREMIGRATED;
  static const State MIGRATED =
    LTFSDmMigRequest_State_MIGRATED;
  static inline bool State_IsValid(int value) {
    return LTFSDmMigRequest_State_IsValid(value);
  }
  static const State State_MIN =
    LTFSDmMigRequest_State_State_MIN;
  static const State State_MAX =
    LTFSDmMigRequest_State_State_MAX;
  static const int State_ARRAYSIZE =
    LTFSDmMigRequest_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return LTFSDmMigRequest_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return LTFSDmMigRequest_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return LTFSDmMigRequest_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // required uint64 token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  ::google::protobuf::uint64 token() const;
  void set_token(::google::protobuf::uint64 value);

  // required uint64 pid = 3;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 3;
  ::google::protobuf::uint64 pid() const;
  void set_pid(::google::protobuf::uint64 value);

  // required .LTFSDmD.LTFSDmMigRequest.State state = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::LTFSDmD::LTFSDmMigRequest_State state() const;
  void set_state(::LTFSDmD::LTFSDmMigRequest_State value);

  // repeated .LTFSDmD.LTFSDmMigRequest.FileName filenames = 5;
  int filenames_size() const;
  void clear_filenames();
  static const int kFilenamesFieldNumber = 5;
  const ::LTFSDmD::LTFSDmMigRequest_FileName& filenames(int index) const;
  ::LTFSDmD::LTFSDmMigRequest_FileName* mutable_filenames(int index);
  ::LTFSDmD::LTFSDmMigRequest_FileName* add_filenames();
  ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmMigRequest_FileName >*
      mutable_filenames();
  const ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmMigRequest_FileName >&
      filenames() const;

  // @@protoc_insertion_point(class_scope:LTFSDmD.LTFSDmMigRequest)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_state();
  inline void clear_has_state();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint64 token_;
  ::google::protobuf::uint64 pid_;
  ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmMigRequest_FileName > filenames_;
  int state_;
  friend void  protobuf_AddDesc_ltfsdm_2eproto();
  friend void protobuf_AssignDesc_ltfsdm_2eproto();
  friend void protobuf_ShutdownFile_ltfsdm_2eproto();

  void InitAsDefaultInstance();
  static LTFSDmMigRequest* default_instance_;
};
// -------------------------------------------------------------------

class LTFSDmMigRequestResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTFSDmD.LTFSDmMigRequestResp) */ {
 public:
  LTFSDmMigRequestResp();
  virtual ~LTFSDmMigRequestResp();

  LTFSDmMigRequestResp(const LTFSDmMigRequestResp& from);

  inline LTFSDmMigRequestResp& operator=(const LTFSDmMigRequestResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTFSDmMigRequestResp& default_instance();

  void Swap(LTFSDmMigRequestResp* other);

  // implements Message ----------------------------------------------

  inline LTFSDmMigRequestResp* New() const { return New(NULL); }

  LTFSDmMigRequestResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTFSDmMigRequestResp& from);
  void MergeFrom(const LTFSDmMigRequestResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LTFSDmMigRequestResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // required uint64 token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  ::google::protobuf::uint64 token() const;
  void set_token(::google::protobuf::uint64 value);

  // required uint64 pid = 3;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 3;
  ::google::protobuf::uint64 pid() const;
  void set_pid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LTFSDmD.LTFSDmMigRequestResp)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_pid();
  inline void clear_has_pid();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 token_;
  ::google::protobuf::uint64 pid_;
  bool success_;
  friend void  protobuf_AddDesc_ltfsdm_2eproto();
  friend void protobuf_AssignDesc_ltfsdm_2eproto();
  friend void protobuf_ShutdownFile_ltfsdm_2eproto();

  void InitAsDefaultInstance();
  static LTFSDmMigRequestResp* default_instance_;
};
// -------------------------------------------------------------------

class LTFSDmSelRecRequest_FileName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTFSDmD.LTFSDmSelRecRequest.FileName) */ {
 public:
  LTFSDmSelRecRequest_FileName();
  virtual ~LTFSDmSelRecRequest_FileName();

  LTFSDmSelRecRequest_FileName(const LTFSDmSelRecRequest_FileName& from);

  inline LTFSDmSelRecRequest_FileName& operator=(const LTFSDmSelRecRequest_FileName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTFSDmSelRecRequest_FileName& default_instance();

  void Swap(LTFSDmSelRecRequest_FileName* other);

  // implements Message ----------------------------------------------

  inline LTFSDmSelRecRequest_FileName* New() const { return New(NULL); }

  LTFSDmSelRecRequest_FileName* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTFSDmSelRecRequest_FileName& from);
  void MergeFrom(const LTFSDmSelRecRequest_FileName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LTFSDmSelRecRequest_FileName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string filename = 1;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:LTFSDmD.LTFSDmSelRecRequest.FileName)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  friend void  protobuf_AddDesc_ltfsdm_2eproto();
  friend void protobuf_AssignDesc_ltfsdm_2eproto();
  friend void protobuf_ShutdownFile_ltfsdm_2eproto();

  void InitAsDefaultInstance();
  static LTFSDmSelRecRequest_FileName* default_instance_;
};
// -------------------------------------------------------------------

class LTFSDmSelRecRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTFSDmD.LTFSDmSelRecRequest) */ {
 public:
  LTFSDmSelRecRequest();
  virtual ~LTFSDmSelRecRequest();

  LTFSDmSelRecRequest(const LTFSDmSelRecRequest& from);

  inline LTFSDmSelRecRequest& operator=(const LTFSDmSelRecRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTFSDmSelRecRequest& default_instance();

  void Swap(LTFSDmSelRecRequest* other);

  // implements Message ----------------------------------------------

  inline LTFSDmSelRecRequest* New() const { return New(NULL); }

  LTFSDmSelRecRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTFSDmSelRecRequest& from);
  void MergeFrom(const LTFSDmSelRecRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LTFSDmSelRecRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LTFSDmSelRecRequest_FileName FileName;

  typedef LTFSDmSelRecRequest_State State;
  static const State PREMIGRATED =
    LTFSDmSelRecRequest_State_PREMIGRATED;
  static const State MIGRATED =
    LTFSDmSelRecRequest_State_MIGRATED;
  static inline bool State_IsValid(int value) {
    return LTFSDmSelRecRequest_State_IsValid(value);
  }
  static const State State_MIN =
    LTFSDmSelRecRequest_State_State_MIN;
  static const State State_MAX =
    LTFSDmSelRecRequest_State_State_MAX;
  static const int State_ARRAYSIZE =
    LTFSDmSelRecRequest_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return LTFSDmSelRecRequest_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return LTFSDmSelRecRequest_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return LTFSDmSelRecRequest_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // required uint64 token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  ::google::protobuf::uint64 token() const;
  void set_token(::google::protobuf::uint64 value);

  // required .LTFSDmD.LTFSDmSelRecRequest.State state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::LTFSDmD::LTFSDmSelRecRequest_State state() const;
  void set_state(::LTFSDmD::LTFSDmSelRecRequest_State value);

  // repeated .LTFSDmD.LTFSDmSelRecRequest.FileName filenames = 4;
  int filenames_size() const;
  void clear_filenames();
  static const int kFilenamesFieldNumber = 4;
  const ::LTFSDmD::LTFSDmSelRecRequest_FileName& filenames(int index) const;
  ::LTFSDmD::LTFSDmSelRecRequest_FileName* mutable_filenames(int index);
  ::LTFSDmD::LTFSDmSelRecRequest_FileName* add_filenames();
  ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmSelRecRequest_FileName >*
      mutable_filenames();
  const ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmSelRecRequest_FileName >&
      filenames() const;

  // @@protoc_insertion_point(class_scope:LTFSDmD.LTFSDmSelRecRequest)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_state();
  inline void clear_has_state();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint64 token_;
  ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmSelRecRequest_FileName > filenames_;
  int state_;
  friend void  protobuf_AddDesc_ltfsdm_2eproto();
  friend void protobuf_AssignDesc_ltfsdm_2eproto();
  friend void protobuf_ShutdownFile_ltfsdm_2eproto();

  void InitAsDefaultInstance();
  static LTFSDmSelRecRequest* default_instance_;
};
// -------------------------------------------------------------------

class LTFSDmTransRecRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTFSDmD.LTFSDmTransRecRequest) */ {
 public:
  LTFSDmTransRecRequest();
  virtual ~LTFSDmTransRecRequest();

  LTFSDmTransRecRequest(const LTFSDmTransRecRequest& from);

  inline LTFSDmTransRecRequest& operator=(const LTFSDmTransRecRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LTFSDmTransRecRequest& default_instance();

  void Swap(LTFSDmTransRecRequest* other);

  // implements Message ----------------------------------------------

  inline LTFSDmTransRecRequest* New() const { return New(NULL); }

  LTFSDmTransRecRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LTFSDmTransRecRequest& from);
  void MergeFrom(const LTFSDmTransRecRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LTFSDmTransRecRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LTFSDmTransRecRequest_State State;
  static const State PREMIGRATED =
    LTFSDmTransRecRequest_State_PREMIGRATED;
  static const State MIGRATED =
    LTFSDmTransRecRequest_State_MIGRATED;
  static inline bool State_IsValid(int value) {
    return LTFSDmTransRecRequest_State_IsValid(value);
  }
  static const State State_MIN =
    LTFSDmTransRecRequest_State_State_MIN;
  static const State State_MAX =
    LTFSDmTransRecRequest_State_State_MAX;
  static const int State_ARRAYSIZE =
    LTFSDmTransRecRequest_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return LTFSDmTransRecRequest_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return LTFSDmTransRecRequest_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return LTFSDmTransRecRequest_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // required uint64 token = 2;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  ::google::protobuf::uint64 token() const;
  void set_token(::google::protobuf::uint64 value);

  // required .LTFSDmD.LTFSDmTransRecRequest.State state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::LTFSDmD::LTFSDmTransRecRequest_State state() const;
  void set_state(::LTFSDmD::LTFSDmTransRecRequest_State value);

  // required uint64 fsid = 4;
  bool has_fsid() const;
  void clear_fsid();
  static const int kFsidFieldNumber = 4;
  ::google::protobuf::uint64 fsid() const;
  void set_fsid(::google::protobuf::uint64 value);

  // required uint64 igen = 5;
  bool has_igen() const;
  void clear_igen();
  static const int kIgenFieldNumber = 5;
  ::google::protobuf::uint64 igen() const;
  void set_igen(::google::protobuf::uint64 value);

  // required uint64 inum = 6;
  bool has_inum() const;
  void clear_inum();
  static const int kInumFieldNumber = 6;
  ::google::protobuf::uint64 inum() const;
  void set_inum(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LTFSDmD.LTFSDmTransRecRequest)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_fsid();
  inline void clear_has_fsid();
  inline void set_has_igen();
  inline void clear_has_igen();
  inline void set_has_inum();
  inline void clear_has_inum();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint64 token_;
  ::google::protobuf::uint64 fsid_;
  ::google::protobuf::uint64 igen_;
  ::google::protobuf::uint64 inum_;
  int state_;
  friend void  protobuf_AddDesc_ltfsdm_2eproto();
  friend void protobuf_AssignDesc_ltfsdm_2eproto();
  friend void protobuf_ShutdownFile_ltfsdm_2eproto();

  void InitAsDefaultInstance();
  static LTFSDmTransRecRequest* default_instance_;
};
// -------------------------------------------------------------------

class Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTFSDmD.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  enum CommandsCase {
    kMigrequest = 1,
    kMigrequestresp = 2,
    kSelrecrequest = 3,
    kTransrecrequest = 4,
    COMMANDS_NOT_SET = 0,
  };

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  inline Command* New() const { return New(NULL); }

  Command* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LTFSDmD.LTFSDmMigRequest migrequest = 1;
  bool has_migrequest() const;
  void clear_migrequest();
  static const int kMigrequestFieldNumber = 1;
  const ::LTFSDmD::LTFSDmMigRequest& migrequest() const;
  ::LTFSDmD::LTFSDmMigRequest* mutable_migrequest();
  ::LTFSDmD::LTFSDmMigRequest* release_migrequest();
  void set_allocated_migrequest(::LTFSDmD::LTFSDmMigRequest* migrequest);

  // optional .LTFSDmD.LTFSDmMigRequestResp migrequestresp = 2;
  bool has_migrequestresp() const;
  void clear_migrequestresp();
  static const int kMigrequestrespFieldNumber = 2;
  const ::LTFSDmD::LTFSDmMigRequestResp& migrequestresp() const;
  ::LTFSDmD::LTFSDmMigRequestResp* mutable_migrequestresp();
  ::LTFSDmD::LTFSDmMigRequestResp* release_migrequestresp();
  void set_allocated_migrequestresp(::LTFSDmD::LTFSDmMigRequestResp* migrequestresp);

  // optional .LTFSDmD.LTFSDmSelRecRequest selrecrequest = 3;
  bool has_selrecrequest() const;
  void clear_selrecrequest();
  static const int kSelrecrequestFieldNumber = 3;
  const ::LTFSDmD::LTFSDmSelRecRequest& selrecrequest() const;
  ::LTFSDmD::LTFSDmSelRecRequest* mutable_selrecrequest();
  ::LTFSDmD::LTFSDmSelRecRequest* release_selrecrequest();
  void set_allocated_selrecrequest(::LTFSDmD::LTFSDmSelRecRequest* selrecrequest);

  // optional .LTFSDmD.LTFSDmTransRecRequest transrecrequest = 4;
  bool has_transrecrequest() const;
  void clear_transrecrequest();
  static const int kTransrecrequestFieldNumber = 4;
  const ::LTFSDmD::LTFSDmTransRecRequest& transrecrequest() const;
  ::LTFSDmD::LTFSDmTransRecRequest* mutable_transrecrequest();
  ::LTFSDmD::LTFSDmTransRecRequest* release_transrecrequest();
  void set_allocated_transrecrequest(::LTFSDmD::LTFSDmTransRecRequest* transrecrequest);

  CommandsCase commands_case() const;
  // @@protoc_insertion_point(class_scope:LTFSDmD.Command)
 private:
  inline void set_has_migrequest();
  inline void set_has_migrequestresp();
  inline void set_has_selrecrequest();
  inline void set_has_transrecrequest();

  inline bool has_commands() const;
  void clear_commands();
  inline void clear_has_commands();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union CommandsUnion {
    CommandsUnion() {}
    ::LTFSDmD::LTFSDmMigRequest* migrequest_;
    ::LTFSDmD::LTFSDmMigRequestResp* migrequestresp_;
    ::LTFSDmD::LTFSDmSelRecRequest* selrecrequest_;
    ::LTFSDmD::LTFSDmTransRecRequest* transrecrequest_;
  } commands_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_ltfsdm_2eproto();
  friend void protobuf_AssignDesc_ltfsdm_2eproto();
  friend void protobuf_ShutdownFile_ltfsdm_2eproto();

  void InitAsDefaultInstance();
  static Command* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LTFSDmMigRequest_FileName

// required string filename = 1;
inline bool LTFSDmMigRequest_FileName::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTFSDmMigRequest_FileName::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTFSDmMigRequest_FileName::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTFSDmMigRequest_FileName::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& LTFSDmMigRequest_FileName::filename() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmMigRequest.FileName.filename)
  return filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LTFSDmMigRequest_FileName::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmMigRequest.FileName.filename)
}
inline void LTFSDmMigRequest_FileName::set_filename(const char* value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTFSDmD.LTFSDmMigRequest.FileName.filename)
}
inline void LTFSDmMigRequest_FileName::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTFSDmD.LTFSDmMigRequest.FileName.filename)
}
inline ::std::string* LTFSDmMigRequest_FileName::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:LTFSDmD.LTFSDmMigRequest.FileName.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LTFSDmMigRequest_FileName::release_filename() {
  // @@protoc_insertion_point(field_release:LTFSDmD.LTFSDmMigRequest.FileName.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LTFSDmMigRequest_FileName::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:LTFSDmD.LTFSDmMigRequest.FileName.filename)
}

// -------------------------------------------------------------------

// LTFSDmMigRequest

// required uint64 key = 1;
inline bool LTFSDmMigRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTFSDmMigRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTFSDmMigRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTFSDmMigRequest::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 LTFSDmMigRequest::key() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmMigRequest.key)
  return key_;
}
inline void LTFSDmMigRequest::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmMigRequest.key)
}

// required uint64 token = 2;
inline bool LTFSDmMigRequest::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTFSDmMigRequest::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTFSDmMigRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTFSDmMigRequest::clear_token() {
  token_ = GOOGLE_ULONGLONG(0);
  clear_has_token();
}
inline ::google::protobuf::uint64 LTFSDmMigRequest::token() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmMigRequest.token)
  return token_;
}
inline void LTFSDmMigRequest::set_token(::google::protobuf::uint64 value) {
  set_has_token();
  token_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmMigRequest.token)
}

// required uint64 pid = 3;
inline bool LTFSDmMigRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LTFSDmMigRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LTFSDmMigRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LTFSDmMigRequest::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::uint64 LTFSDmMigRequest::pid() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmMigRequest.pid)
  return pid_;
}
inline void LTFSDmMigRequest::set_pid(::google::protobuf::uint64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmMigRequest.pid)
}

// required .LTFSDmD.LTFSDmMigRequest.State state = 4;
inline bool LTFSDmMigRequest::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LTFSDmMigRequest::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LTFSDmMigRequest::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LTFSDmMigRequest::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::LTFSDmD::LTFSDmMigRequest_State LTFSDmMigRequest::state() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmMigRequest.state)
  return static_cast< ::LTFSDmD::LTFSDmMigRequest_State >(state_);
}
inline void LTFSDmMigRequest::set_state(::LTFSDmD::LTFSDmMigRequest_State value) {
  assert(::LTFSDmD::LTFSDmMigRequest_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmMigRequest.state)
}

// repeated .LTFSDmD.LTFSDmMigRequest.FileName filenames = 5;
inline int LTFSDmMigRequest::filenames_size() const {
  return filenames_.size();
}
inline void LTFSDmMigRequest::clear_filenames() {
  filenames_.Clear();
}
inline const ::LTFSDmD::LTFSDmMigRequest_FileName& LTFSDmMigRequest::filenames(int index) const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmMigRequest.filenames)
  return filenames_.Get(index);
}
inline ::LTFSDmD::LTFSDmMigRequest_FileName* LTFSDmMigRequest::mutable_filenames(int index) {
  // @@protoc_insertion_point(field_mutable:LTFSDmD.LTFSDmMigRequest.filenames)
  return filenames_.Mutable(index);
}
inline ::LTFSDmD::LTFSDmMigRequest_FileName* LTFSDmMigRequest::add_filenames() {
  // @@protoc_insertion_point(field_add:LTFSDmD.LTFSDmMigRequest.filenames)
  return filenames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmMigRequest_FileName >*
LTFSDmMigRequest::mutable_filenames() {
  // @@protoc_insertion_point(field_mutable_list:LTFSDmD.LTFSDmMigRequest.filenames)
  return &filenames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmMigRequest_FileName >&
LTFSDmMigRequest::filenames() const {
  // @@protoc_insertion_point(field_list:LTFSDmD.LTFSDmMigRequest.filenames)
  return filenames_;
}

// -------------------------------------------------------------------

// LTFSDmMigRequestResp

// required bool success = 1;
inline bool LTFSDmMigRequestResp::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTFSDmMigRequestResp::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTFSDmMigRequestResp::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTFSDmMigRequestResp::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool LTFSDmMigRequestResp::success() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmMigRequestResp.success)
  return success_;
}
inline void LTFSDmMigRequestResp::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmMigRequestResp.success)
}

// required uint64 token = 2;
inline bool LTFSDmMigRequestResp::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTFSDmMigRequestResp::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTFSDmMigRequestResp::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTFSDmMigRequestResp::clear_token() {
  token_ = GOOGLE_ULONGLONG(0);
  clear_has_token();
}
inline ::google::protobuf::uint64 LTFSDmMigRequestResp::token() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmMigRequestResp.token)
  return token_;
}
inline void LTFSDmMigRequestResp::set_token(::google::protobuf::uint64 value) {
  set_has_token();
  token_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmMigRequestResp.token)
}

// required uint64 pid = 3;
inline bool LTFSDmMigRequestResp::has_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LTFSDmMigRequestResp::set_has_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LTFSDmMigRequestResp::clear_has_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LTFSDmMigRequestResp::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::uint64 LTFSDmMigRequestResp::pid() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmMigRequestResp.pid)
  return pid_;
}
inline void LTFSDmMigRequestResp::set_pid(::google::protobuf::uint64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmMigRequestResp.pid)
}

// -------------------------------------------------------------------

// LTFSDmSelRecRequest_FileName

// required string filename = 1;
inline bool LTFSDmSelRecRequest_FileName::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTFSDmSelRecRequest_FileName::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTFSDmSelRecRequest_FileName::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTFSDmSelRecRequest_FileName::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& LTFSDmSelRecRequest_FileName::filename() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmSelRecRequest.FileName.filename)
  return filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LTFSDmSelRecRequest_FileName::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmSelRecRequest.FileName.filename)
}
inline void LTFSDmSelRecRequest_FileName::set_filename(const char* value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTFSDmD.LTFSDmSelRecRequest.FileName.filename)
}
inline void LTFSDmSelRecRequest_FileName::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTFSDmD.LTFSDmSelRecRequest.FileName.filename)
}
inline ::std::string* LTFSDmSelRecRequest_FileName::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:LTFSDmD.LTFSDmSelRecRequest.FileName.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LTFSDmSelRecRequest_FileName::release_filename() {
  // @@protoc_insertion_point(field_release:LTFSDmD.LTFSDmSelRecRequest.FileName.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LTFSDmSelRecRequest_FileName::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:LTFSDmD.LTFSDmSelRecRequest.FileName.filename)
}

// -------------------------------------------------------------------

// LTFSDmSelRecRequest

// required uint64 key = 1;
inline bool LTFSDmSelRecRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTFSDmSelRecRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTFSDmSelRecRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTFSDmSelRecRequest::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 LTFSDmSelRecRequest::key() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmSelRecRequest.key)
  return key_;
}
inline void LTFSDmSelRecRequest::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmSelRecRequest.key)
}

// required uint64 token = 2;
inline bool LTFSDmSelRecRequest::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTFSDmSelRecRequest::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTFSDmSelRecRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTFSDmSelRecRequest::clear_token() {
  token_ = GOOGLE_ULONGLONG(0);
  clear_has_token();
}
inline ::google::protobuf::uint64 LTFSDmSelRecRequest::token() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmSelRecRequest.token)
  return token_;
}
inline void LTFSDmSelRecRequest::set_token(::google::protobuf::uint64 value) {
  set_has_token();
  token_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmSelRecRequest.token)
}

// required .LTFSDmD.LTFSDmSelRecRequest.State state = 3;
inline bool LTFSDmSelRecRequest::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LTFSDmSelRecRequest::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LTFSDmSelRecRequest::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LTFSDmSelRecRequest::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::LTFSDmD::LTFSDmSelRecRequest_State LTFSDmSelRecRequest::state() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmSelRecRequest.state)
  return static_cast< ::LTFSDmD::LTFSDmSelRecRequest_State >(state_);
}
inline void LTFSDmSelRecRequest::set_state(::LTFSDmD::LTFSDmSelRecRequest_State value) {
  assert(::LTFSDmD::LTFSDmSelRecRequest_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmSelRecRequest.state)
}

// repeated .LTFSDmD.LTFSDmSelRecRequest.FileName filenames = 4;
inline int LTFSDmSelRecRequest::filenames_size() const {
  return filenames_.size();
}
inline void LTFSDmSelRecRequest::clear_filenames() {
  filenames_.Clear();
}
inline const ::LTFSDmD::LTFSDmSelRecRequest_FileName& LTFSDmSelRecRequest::filenames(int index) const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmSelRecRequest.filenames)
  return filenames_.Get(index);
}
inline ::LTFSDmD::LTFSDmSelRecRequest_FileName* LTFSDmSelRecRequest::mutable_filenames(int index) {
  // @@protoc_insertion_point(field_mutable:LTFSDmD.LTFSDmSelRecRequest.filenames)
  return filenames_.Mutable(index);
}
inline ::LTFSDmD::LTFSDmSelRecRequest_FileName* LTFSDmSelRecRequest::add_filenames() {
  // @@protoc_insertion_point(field_add:LTFSDmD.LTFSDmSelRecRequest.filenames)
  return filenames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmSelRecRequest_FileName >*
LTFSDmSelRecRequest::mutable_filenames() {
  // @@protoc_insertion_point(field_mutable_list:LTFSDmD.LTFSDmSelRecRequest.filenames)
  return &filenames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTFSDmD::LTFSDmSelRecRequest_FileName >&
LTFSDmSelRecRequest::filenames() const {
  // @@protoc_insertion_point(field_list:LTFSDmD.LTFSDmSelRecRequest.filenames)
  return filenames_;
}

// -------------------------------------------------------------------

// LTFSDmTransRecRequest

// required uint64 key = 1;
inline bool LTFSDmTransRecRequest::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LTFSDmTransRecRequest::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LTFSDmTransRecRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LTFSDmTransRecRequest::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::uint64 LTFSDmTransRecRequest::key() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmTransRecRequest.key)
  return key_;
}
inline void LTFSDmTransRecRequest::set_key(::google::protobuf::uint64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmTransRecRequest.key)
}

// required uint64 token = 2;
inline bool LTFSDmTransRecRequest::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LTFSDmTransRecRequest::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LTFSDmTransRecRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LTFSDmTransRecRequest::clear_token() {
  token_ = GOOGLE_ULONGLONG(0);
  clear_has_token();
}
inline ::google::protobuf::uint64 LTFSDmTransRecRequest::token() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmTransRecRequest.token)
  return token_;
}
inline void LTFSDmTransRecRequest::set_token(::google::protobuf::uint64 value) {
  set_has_token();
  token_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmTransRecRequest.token)
}

// required .LTFSDmD.LTFSDmTransRecRequest.State state = 3;
inline bool LTFSDmTransRecRequest::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LTFSDmTransRecRequest::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LTFSDmTransRecRequest::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LTFSDmTransRecRequest::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::LTFSDmD::LTFSDmTransRecRequest_State LTFSDmTransRecRequest::state() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmTransRecRequest.state)
  return static_cast< ::LTFSDmD::LTFSDmTransRecRequest_State >(state_);
}
inline void LTFSDmTransRecRequest::set_state(::LTFSDmD::LTFSDmTransRecRequest_State value) {
  assert(::LTFSDmD::LTFSDmTransRecRequest_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmTransRecRequest.state)
}

// required uint64 fsid = 4;
inline bool LTFSDmTransRecRequest::has_fsid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LTFSDmTransRecRequest::set_has_fsid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LTFSDmTransRecRequest::clear_has_fsid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LTFSDmTransRecRequest::clear_fsid() {
  fsid_ = GOOGLE_ULONGLONG(0);
  clear_has_fsid();
}
inline ::google::protobuf::uint64 LTFSDmTransRecRequest::fsid() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmTransRecRequest.fsid)
  return fsid_;
}
inline void LTFSDmTransRecRequest::set_fsid(::google::protobuf::uint64 value) {
  set_has_fsid();
  fsid_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmTransRecRequest.fsid)
}

// required uint64 igen = 5;
inline bool LTFSDmTransRecRequest::has_igen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LTFSDmTransRecRequest::set_has_igen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LTFSDmTransRecRequest::clear_has_igen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LTFSDmTransRecRequest::clear_igen() {
  igen_ = GOOGLE_ULONGLONG(0);
  clear_has_igen();
}
inline ::google::protobuf::uint64 LTFSDmTransRecRequest::igen() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmTransRecRequest.igen)
  return igen_;
}
inline void LTFSDmTransRecRequest::set_igen(::google::protobuf::uint64 value) {
  set_has_igen();
  igen_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmTransRecRequest.igen)
}

// required uint64 inum = 6;
inline bool LTFSDmTransRecRequest::has_inum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LTFSDmTransRecRequest::set_has_inum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LTFSDmTransRecRequest::clear_has_inum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LTFSDmTransRecRequest::clear_inum() {
  inum_ = GOOGLE_ULONGLONG(0);
  clear_has_inum();
}
inline ::google::protobuf::uint64 LTFSDmTransRecRequest::inum() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.LTFSDmTransRecRequest.inum)
  return inum_;
}
inline void LTFSDmTransRecRequest::set_inum(::google::protobuf::uint64 value) {
  set_has_inum();
  inum_ = value;
  // @@protoc_insertion_point(field_set:LTFSDmD.LTFSDmTransRecRequest.inum)
}

// -------------------------------------------------------------------

// Command

// optional .LTFSDmD.LTFSDmMigRequest migrequest = 1;
inline bool Command::has_migrequest() const {
  return commands_case() == kMigrequest;
}
inline void Command::set_has_migrequest() {
  _oneof_case_[0] = kMigrequest;
}
inline void Command::clear_migrequest() {
  if (has_migrequest()) {
    delete commands_.migrequest_;
    clear_has_commands();
  }
}
inline  const ::LTFSDmD::LTFSDmMigRequest& Command::migrequest() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.Command.migrequest)
  return has_migrequest()
      ? *commands_.migrequest_
      : ::LTFSDmD::LTFSDmMigRequest::default_instance();
}
inline ::LTFSDmD::LTFSDmMigRequest* Command::mutable_migrequest() {
  if (!has_migrequest()) {
    clear_commands();
    set_has_migrequest();
    commands_.migrequest_ = new ::LTFSDmD::LTFSDmMigRequest;
  }
  // @@protoc_insertion_point(field_mutable:LTFSDmD.Command.migrequest)
  return commands_.migrequest_;
}
inline ::LTFSDmD::LTFSDmMigRequest* Command::release_migrequest() {
  // @@protoc_insertion_point(field_release:LTFSDmD.Command.migrequest)
  if (has_migrequest()) {
    clear_has_commands();
    ::LTFSDmD::LTFSDmMigRequest* temp = commands_.migrequest_;
    commands_.migrequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Command::set_allocated_migrequest(::LTFSDmD::LTFSDmMigRequest* migrequest) {
  clear_commands();
  if (migrequest) {
    set_has_migrequest();
    commands_.migrequest_ = migrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:LTFSDmD.Command.migrequest)
}

// optional .LTFSDmD.LTFSDmMigRequestResp migrequestresp = 2;
inline bool Command::has_migrequestresp() const {
  return commands_case() == kMigrequestresp;
}
inline void Command::set_has_migrequestresp() {
  _oneof_case_[0] = kMigrequestresp;
}
inline void Command::clear_migrequestresp() {
  if (has_migrequestresp()) {
    delete commands_.migrequestresp_;
    clear_has_commands();
  }
}
inline  const ::LTFSDmD::LTFSDmMigRequestResp& Command::migrequestresp() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.Command.migrequestresp)
  return has_migrequestresp()
      ? *commands_.migrequestresp_
      : ::LTFSDmD::LTFSDmMigRequestResp::default_instance();
}
inline ::LTFSDmD::LTFSDmMigRequestResp* Command::mutable_migrequestresp() {
  if (!has_migrequestresp()) {
    clear_commands();
    set_has_migrequestresp();
    commands_.migrequestresp_ = new ::LTFSDmD::LTFSDmMigRequestResp;
  }
  // @@protoc_insertion_point(field_mutable:LTFSDmD.Command.migrequestresp)
  return commands_.migrequestresp_;
}
inline ::LTFSDmD::LTFSDmMigRequestResp* Command::release_migrequestresp() {
  // @@protoc_insertion_point(field_release:LTFSDmD.Command.migrequestresp)
  if (has_migrequestresp()) {
    clear_has_commands();
    ::LTFSDmD::LTFSDmMigRequestResp* temp = commands_.migrequestresp_;
    commands_.migrequestresp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Command::set_allocated_migrequestresp(::LTFSDmD::LTFSDmMigRequestResp* migrequestresp) {
  clear_commands();
  if (migrequestresp) {
    set_has_migrequestresp();
    commands_.migrequestresp_ = migrequestresp;
  }
  // @@protoc_insertion_point(field_set_allocated:LTFSDmD.Command.migrequestresp)
}

// optional .LTFSDmD.LTFSDmSelRecRequest selrecrequest = 3;
inline bool Command::has_selrecrequest() const {
  return commands_case() == kSelrecrequest;
}
inline void Command::set_has_selrecrequest() {
  _oneof_case_[0] = kSelrecrequest;
}
inline void Command::clear_selrecrequest() {
  if (has_selrecrequest()) {
    delete commands_.selrecrequest_;
    clear_has_commands();
  }
}
inline  const ::LTFSDmD::LTFSDmSelRecRequest& Command::selrecrequest() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.Command.selrecrequest)
  return has_selrecrequest()
      ? *commands_.selrecrequest_
      : ::LTFSDmD::LTFSDmSelRecRequest::default_instance();
}
inline ::LTFSDmD::LTFSDmSelRecRequest* Command::mutable_selrecrequest() {
  if (!has_selrecrequest()) {
    clear_commands();
    set_has_selrecrequest();
    commands_.selrecrequest_ = new ::LTFSDmD::LTFSDmSelRecRequest;
  }
  // @@protoc_insertion_point(field_mutable:LTFSDmD.Command.selrecrequest)
  return commands_.selrecrequest_;
}
inline ::LTFSDmD::LTFSDmSelRecRequest* Command::release_selrecrequest() {
  // @@protoc_insertion_point(field_release:LTFSDmD.Command.selrecrequest)
  if (has_selrecrequest()) {
    clear_has_commands();
    ::LTFSDmD::LTFSDmSelRecRequest* temp = commands_.selrecrequest_;
    commands_.selrecrequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Command::set_allocated_selrecrequest(::LTFSDmD::LTFSDmSelRecRequest* selrecrequest) {
  clear_commands();
  if (selrecrequest) {
    set_has_selrecrequest();
    commands_.selrecrequest_ = selrecrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:LTFSDmD.Command.selrecrequest)
}

// optional .LTFSDmD.LTFSDmTransRecRequest transrecrequest = 4;
inline bool Command::has_transrecrequest() const {
  return commands_case() == kTransrecrequest;
}
inline void Command::set_has_transrecrequest() {
  _oneof_case_[0] = kTransrecrequest;
}
inline void Command::clear_transrecrequest() {
  if (has_transrecrequest()) {
    delete commands_.transrecrequest_;
    clear_has_commands();
  }
}
inline  const ::LTFSDmD::LTFSDmTransRecRequest& Command::transrecrequest() const {
  // @@protoc_insertion_point(field_get:LTFSDmD.Command.transrecrequest)
  return has_transrecrequest()
      ? *commands_.transrecrequest_
      : ::LTFSDmD::LTFSDmTransRecRequest::default_instance();
}
inline ::LTFSDmD::LTFSDmTransRecRequest* Command::mutable_transrecrequest() {
  if (!has_transrecrequest()) {
    clear_commands();
    set_has_transrecrequest();
    commands_.transrecrequest_ = new ::LTFSDmD::LTFSDmTransRecRequest;
  }
  // @@protoc_insertion_point(field_mutable:LTFSDmD.Command.transrecrequest)
  return commands_.transrecrequest_;
}
inline ::LTFSDmD::LTFSDmTransRecRequest* Command::release_transrecrequest() {
  // @@protoc_insertion_point(field_release:LTFSDmD.Command.transrecrequest)
  if (has_transrecrequest()) {
    clear_has_commands();
    ::LTFSDmD::LTFSDmTransRecRequest* temp = commands_.transrecrequest_;
    commands_.transrecrequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Command::set_allocated_transrecrequest(::LTFSDmD::LTFSDmTransRecRequest* transrecrequest) {
  clear_commands();
  if (transrecrequest) {
    set_has_transrecrequest();
    commands_.transrecrequest_ = transrecrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:LTFSDmD.Command.transrecrequest)
}

inline bool Command::has_commands() const {
  return commands_case() != COMMANDS_NOT_SET;
}
inline void Command::clear_has_commands() {
  _oneof_case_[0] = COMMANDS_NOT_SET;
}
inline Command::CommandsCase Command::commands_case() const {
  return Command::CommandsCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace LTFSDmD

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LTFSDmD::LTFSDmMigRequest_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTFSDmD::LTFSDmMigRequest_State>() {
  return ::LTFSDmD::LTFSDmMigRequest_State_descriptor();
}
template <> struct is_proto_enum< ::LTFSDmD::LTFSDmSelRecRequest_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTFSDmD::LTFSDmSelRecRequest_State>() {
  return ::LTFSDmD::LTFSDmSelRecRequest_State_descriptor();
}
template <> struct is_proto_enum< ::LTFSDmD::LTFSDmTransRecRequest_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTFSDmD::LTFSDmTransRecRequest_State>() {
  return ::LTFSDmD::LTFSDmTransRecRequest_State_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ltfsdm_2eproto__INCLUDED
